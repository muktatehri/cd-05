//Implement the lexical analyzer using JLex/ flex or lex or other lexical analyzer
%{
#include<stdio.h>
int COMMENT=0;
%}

identifier [a-zA-Z][a-zA-Z0-9]*

%%

#.* { printf("\n%s is a PREPROCESSOR DIRECTIVE",yytext);}

int|float|char|double|while|for|do|if|break|continue|void|switch|case|long|struct|const|typedef|return
|else|goto {printf("\n\t%s is a KEYWORD",yytext);}

"/*" {COMMENT = 1;}

"*/" {if(COMMENT) COMMENT = 0;}

{identifier}\( {if(!COMMENT) printf("\n\nFUNCTION\n\t%s",yytext);}

{ {if(!COMMENT) printf("\n BLOCK BEGINS");} } {if(!COMMENT) printf("\n BLOCK ENDS");}

{identifier}([0-9]*)? {if(!COMMENT) printf("\n %s IDENTIFIER",yytext);} ".*\" {if(!COMMENT) printf("\n\t%s is a STRING",yytext);}

[0-9]+ {if(!COMMENT) printf("\n\t%s is a NUMBER",yytext);} {if(!COMMENT) printf("\n\t");ECHO;printf("\n");}

<=|>=|
